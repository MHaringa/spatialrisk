[{"path":"https://mharinga.github.io/spatialrisk/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Haringa. Author, maintainer.","code":""},{"path":"https://mharinga.github.io/spatialrisk/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Haringa M (2024). spatialrisk: Calculating Spatial Risk. R package version 0.7.1.9000, https://mharinga.github.io/spatialrisk/, https://github.com/mharinga/spatialrisk.","code":"@Manual{,   title = {spatialrisk: Calculating Spatial Risk},   author = {Martin Haringa},   year = {2024},   note = {R package version 0.7.1.9000, https://mharinga.github.io/spatialrisk/},   url = {https://github.com/mharinga/spatialrisk}, }"},{"path":"https://mharinga.github.io/spatialrisk/index.html","id":"spatialrisk-","dir":"","previous_headings":"","what":"Calculating Spatial Risk","title":"Calculating Spatial Risk","text":"spatialrisk specifically designed efficient spatial risk calculations, allowing users quickly sum observations within defined radius. key functions implemented C++ using Rcpp, package ensures fast performance various spatial analysis tasks, including optimizing location resource allocation. One core challenges addressed spatialrisk Maximal Covering Location Problem (MCLP), focuses finding optimal center coordinates circle fixed radius maximize coverage demand points. framework, center represents potential facility sites, demand points buildings locations require coverage. optimization crucial effective service delivery risk management across diverse fields, including urban planning emergency services. context insurance industry, principles behind MCLP align European Directive 2009/138 (Solvency II), requires insurers assess fire risk calculating highest concentration risks within 200 m radius. directive specify methodology, spatialrisk provides systematic approach identify high-risk clusters map. capability allows insurance companies determine maximum exposure catastrophic fire risks supports calibrating solvency capital requirements effectively.","code":""},{"path":"https://mharinga.github.io/spatialrisk/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calculating Spatial Risk","text":"Install spatialrisk CRAN: development version GitHub:","code":"install.packages(\"spatialrisk\") # install.packages(\"remotes\") remotes::install_github(\"MHaringa/spatialrisk\")"},{"path":"https://mharinga.github.io/spatialrisk/index.html","id":"example-1","dir":"","previous_headings":"","what":"Example 1","title":"Calculating Spatial Risk","text":"Filter observations Groningen fall within circle radius 100m drawn around point (lon,lat) = (6.561561,53.21326): sum observations within circle equal : next example shows determine sum observations within circle certain radius multiple points.","code":"library(spatialrisk) circle <- points_in_circle(Groningen, lon_center = 6.571561, lat_center = 53.21326, radius = 100) circle ## # A tibble: 14 × 10 ##    street   number letter suffix postal_code city    lon   lat amount distance_m ##    <chr>     <int> <chr>  <chr>  <chr>       <chr> <dbl> <dbl>  <dbl>      <dbl> ##  1 Heresin…      5 <NA>   <NA>   9711EP      Gron…  6.57  53.2      5       31.4 ##  2 Heresin…     11 <NA>   <NA>   9711ER      Gron…  6.57  53.2     11       47.8 ##  3 Zuiderp…   1003 <NA>   <NA>   9724AK      Gron…  6.57  53.2   1003       57.6 ##  4 Heresin…     13 <NA>   <NA>   9711ER      Gron…  6.57  53.2     13       68.1 ##  5 Hereple…     10 <NA>   <NA>   9711GA      Gron…  6.57  53.2     10       74.6 ##  6 Heresin…     16 <NA>   <NA>   9711ES      Gron…  6.57  53.2     16       84.1 ##  7 Heresin…      6 <NA>   <NA>   9711ES      Gron…  6.57  53.2      6       86.2 ##  8 Heresin…      6 a      <NA>   9711ES      Gron…  6.57  53.2      6       87.8 ##  9 Heresin…      6 b      <NA>   9711ES      Gron…  6.57  53.2      6       90.9 ## 10 Heresin…     20 <NA>   <NA>   9711ET      Gron…  6.57  53.2     20       91.5 ## 11 Heresin…     20 a      <NA>   9711ET      Gron…  6.57  53.2     20       93.0 ## 12 Heresin…     15 a      <NA>   9711ER      Gron…  6.57  53.2     15       95.1 ## 13 Zuiderp…   1007 <NA>   <NA>   9724AK      Gron…  6.57  53.2   1007       97.2 ## 14 Zuiderp…     25 a      <NA>   9724AJ      Gron…  6.57  53.2     25       97.8 sum(circle$amount) ## [1] 2163"},{"path":"https://mharinga.github.io/spatialrisk/index.html","id":"example-2","dir":"","previous_headings":"","what":"Example 2","title":"Calculating Spatial Risk","text":"concentration() determines sum observations within circle certain radius multiple points. Find row df sum observations Groningen within circle radius 100m (lon,lat) pair: Show result indeed equal result Example 1:","code":"df <- data.frame(location = c(\"p1\", \"p2\", \"p3\"),                   lon = c(6.561561, 6.561398, 6.571561),                   lat = c(53.21369, 53.21326, 53.21326))  conc <- concentration(df, Groningen, value = amount, radius = 100) conc ##   location      lon      lat concentration ## 1       p1 6.561561 53.21369           775 ## 2       p2 6.561398 53.21326          2271 ## 3       p3 6.571561 53.21326          2163 isTRUE(sum(circle$amount) == conc$concentration[3]) ## [1] TRUE"},{"path":"https://mharinga.github.io/spatialrisk/index.html","id":"example-3","dir":"","previous_headings":"","what":"Example 3","title":"Calculating Spatial Risk","text":"Example 2 shows determine sum observations within circle certain radius multiple points. find_highest_concentration() can used determine central coordinates circle constant radius maximizes coverage demand points. example applied data set Groningen. Show points data set Groningen:   Find central coordinates circle highest concentration: Note functions written C++, therefore fast. Output highest concentration: Plot points highest concentration highest concentration. sum values equal concentration. concentration highest data set Groningen. Show highest concentration map (highest concentration includes two apartment buildings many objects):   also possible show coordinates one concentration. show second third highest concentration: Create interactive map:   Show objects highest circle:","code":"plot_points(Groningen, value = \"amount\") hconc <- find_highest_concentration(Groningen,                                      value = \"amount\",                                      radius = 200) ## Time difference of 0.563406 secs hc[[1]] ##        lon      lat concentration cell id ## 1 6.547326 53.23658         64438 3642  1 plot(hc) hconc <- find_highest_concentration(Groningen,                                      value = \"amount\",                                      radius = 200,                                      top_n = 3) ## Finished 1 of 3Finished 2 of 3Finished 3 of 3 plot(hconc) hc[[2]] ## # A tibble: 208 × 13 ##    street        number letter suffix postal_code city    lon   lat amount    ix ##    <chr>          <int> <chr>  <chr>  <chr>       <chr> <dbl> <dbl>  <dbl> <int> ##  1 Elzenlaan        135 <NA>   <NA>   9741ND      Gron…  6.55  53.2    135 20449 ##  2 Elzenlaan        139 <NA>   <NA>   9741ND      Gron…  6.55  53.2    139 23229 ##  3 Elzenlaan         70 <NA>   <NA>   9741NG      Gron…  6.55  53.2     70   585 ##  4 Elzenlaan         68 <NA>   <NA>   9741NG      Gron…  6.55  53.2     68 14677 ##  5 Duindoornstr…      1 <NA>   <NA>   9741NM      Gron…  6.55  53.2     12 16828 ##  6 Duindoornstr…     17 <NA>   <NA>   9741NM      Gron…  6.55  53.2     17 12829 ##  7 Duindoornstr…     15 <NA>   <NA>   9741NM      Gron…  6.55  53.2     15 16004 ##  8 Duindoornstr…     21 <NA>   <NA>   9741NM      Gron…  6.55  53.2     21 11748 ##  9 Duindoornstr…     13 <NA>   <NA>   9741NM      Gron…  6.55  53.2     13  2006 ## 10 Ranonkelstra…     38 <NA>   <NA>   9741LT      Gron…  6.55  53.2     38 19696 ## # ℹ 198 more rows ## # ℹ 3 more variables: distance_m <dbl>, id <int>, conc <dbl>"},{"path":"https://mharinga.github.io/spatialrisk/index.html","id":"example-4","dir":"","previous_headings":"","what":"Example 4","title":"Calculating Spatial Risk","text":"spatialrisk also offers features creating choropleth maps, can challenging R. points_to_polygon() provides elegant solution issue. Typically, creating choropleths involves aggregating data regional level shapefile merging aggregated data shapefile. However, method can problematic names data match shapefile, differences punctuation spelling area names. address , points_to_polygon() uses longitude latitude point accurately map corresponding region. approach simplifies creation choropleth maps various regional levels. example, points_to_polygon() can used visualize total sum insured municipality level across Netherlands: choropleth() generates map simple feature object created previous step. two ways create choropleth map: set mode plot, produces static map. clustering case based Fisher-Jenks algorithm, widely used method classifying data choropleth maps.   mode set view interactive map created:   following simple feature objects available spatialrisk: nl_provincie, nl_corop, nl_gemeente, nl_postcode1, nl_postcode2, nl_postcode3, nl_postcode4, world_countries, europe_countries.","code":"gemeente_sf <- points_to_polygon(nl_gemeente, insurance, sum(amount, na.rm = TRUE)) choropleth(gemeente_sf, mode = \"plot\", legend_title = \"Sum insured (EUR)\", n = 5) choropleth(gemeente_sf, mode = \"view\", legend_title = \"Sum insured (EUR)\")"},{"path":"https://mharinga.github.io/spatialrisk/reference/Groningen.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinates of houses in Groningen — Groningen","title":"Coordinates of houses in Groningen — Groningen","text":"dataset postal codes corresponding spatial locations terms latitude longitude.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/Groningen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinates of houses in Groningen — Groningen","text":"","code":"Groningen"},{"path":"https://mharinga.github.io/spatialrisk/reference/Groningen.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Coordinates of houses in Groningen — Groningen","text":"data frame 25000 rows 8 variables: street Name street number Number house letter Letter house suffix Suffix number house postal_code Postal code house city name city lon Longitude (degrees) lat Latitude (degrees) amount Random value","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/Groningen.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Coordinates of houses in Groningen — Groningen","text":"BAG Dutch registry Buildings adresses (Basisregistratie adressen en gebouwen).","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/cells_above_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify the focal cells exceeding the threshold — cells_above_threshold","title":"Identify the focal cells exceeding the threshold — cells_above_threshold","text":"Generate data.frame containing cell indices focal cells surpassing specified threshold. Additionally, include columns coordinates (xy) corresponding center cell.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/cells_above_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify the focal cells exceeding the threshold — cells_above_threshold","text":"","code":"cells_above_threshold(focal, threshold)"},{"path":"https://mharinga.github.io/spatialrisk/reference/cells_above_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify the focal cells exceeding the threshold — cells_above_threshold","text":"focal focal output terra::focal(). threshold lower (numeric) threshold boundary.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/cells_above_threshold.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Identify the focal cells exceeding the threshold — cells_above_threshold","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/choropleth.html","id":null,"dir":"Reference","previous_headings":"","what":"Create choropleth map — choropleth","title":"Create choropleth map — choropleth","text":"Takes object produced points_to_polygon(), creates corresponding choropleth map. given clustering according Fisher-Jenks algorithm. commonly used method choropleths seeks reduce variance within classes maximize variance classes.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/choropleth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create choropleth map — choropleth","text":"","code":"choropleth(   sf_object,   value = \"output\",   id_name = \"areaname\",   mode = \"plot\",   n = 7,   legend_title = \"Clustering\",   palette = \"viridis\" )"},{"path":"https://mharinga.github.io/spatialrisk/reference/choropleth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create choropleth map — choropleth","text":"sf_object object class sf value column name shade polygons id_name column name ids plot mode choose static ('plot' default) interactive map ('view') n number clusters (default 7) legend_title title legend palette palette name vector colors. See tmaptools::palette_explorer() named palettes. Use - prefix reverse palette. default palette \"viridis\".","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/choropleth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create choropleth map — choropleth","text":"tmap","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/choropleth.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create choropleth map — choropleth","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/choropleth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create choropleth map — choropleth","text":"","code":"test <- points_to_polygon(nl_provincie, insurance, sum(amount, na.rm = TRUE)) #> 109 points fall not within a polygon. choropleth(test) #> -- tmap v3 code detected -- #> [v3->v4] tm_polygons(): instead of 'style = \"fisher\"', use 'fill.scale = tm_scale_intervals()' and migrate the argument(s) 'style', 'n', 'palette' (rename to 'values') to 'tm_scale_intervals(<HERE>)' #> [v3->v4] tm_polygons(): migrate the argument(s) related to the legend of the visual variable 'fill', namely 'title' to 'fill.legend = tm_legend(<HERE>)' #> As of version 4.0, 'tm_scale_bar()' is deprecated. Please use 'tm_scalebar()' instead.FALSE  choropleth(test, id_name = \"areaname\", mode = \"view\") #> -- tmap v3 code detected -- #> [v3->v4] tm_polygons(): instead of 'style = \"fisher\"', use 'fill.scale = tm_scale_intervals()' and migrate the argument(s) 'style', 'n', 'palette' (rename to 'values') to 'tm_scale_intervals(<HERE>)' #> [v3->v4] tm_polygons(): use 'fill_alpha' instead of 'alpha' #> [v3->v4] tm_polygons(): migrate the argument(s) related to the legend of the visual variable 'fill', namely 'title' to 'fill.legend = tm_legend(<HERE>)'"},{"path":"https://mharinga.github.io/spatialrisk/reference/choropleth_ggplot2.html","id":null,"dir":"Reference","previous_headings":"","what":"Map object of class sf using ggplot2 — choropleth_ggplot2","title":"Map object of class sf using ggplot2 — choropleth_ggplot2","text":"Takes object produced choropleth_sf(), creates correspoding choropleth map.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/choropleth_ggplot2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map object of class sf using ggplot2 — choropleth_ggplot2","text":"","code":"choropleth_ggplot2(   sf_object,   value = output,   n = 7,   dig.lab = 2,   legend_title = \"Class\",   option = \"D\",   direction = 1 )"},{"path":"https://mharinga.github.io/spatialrisk/reference/choropleth_ggplot2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map object of class sf using ggplot2 — choropleth_ggplot2","text":"sf_object object class sf value column shade polygons n number clusters (default 7) dig.lab number digits legend (default 2) legend_title title legend option character string indicating colormap option use. Four options available: \"magma\" (\"\"), \"inferno\" (\"B\"), \"plasma\" (\"C\"), \"viridis\" (\"D\", default option) \"cividis\" (\"E\"). direction Sets order colors scale. 1, default, colors ordered darkest lightest. -1, order colors reversed.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/choropleth_ggplot2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map object of class sf using ggplot2 — choropleth_ggplot2","text":"ggplot map","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/choropleth_ggplot2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Map object of class sf using ggplot2 — choropleth_ggplot2","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/choropleth_ggplot2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map object of class sf using ggplot2 — choropleth_ggplot2","text":"","code":"test <- points_to_polygon(nl_postcode2, insurance, sum(amount, na.rm = TRUE)) #> 80 points fall not within a polygon. choropleth_ggplot2(test)"},{"path":"https://mharinga.github.io/spatialrisk/reference/conc_per_cell_new.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the concentrations within the highest focal cells for the current iteration — conc_per_cell_new","title":"Determine the concentrations within the highest focal cells for the current iteration — conc_per_cell_new","text":"Determine concentrations within highest focal cells current iteration.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/conc_per_cell_new.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the concentrations within the highest focal cells for the current iteration — conc_per_cell_new","text":"","code":"conc_per_cell_new(   high_foc,   dff,   value,   size,   points,   db,   radius,   crs_from,   crs_to,   lon,   lat )"},{"path":"https://mharinga.github.io/spatialrisk/reference/conc_per_cell_new.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the concentrations within the highest focal cells for the current iteration — conc_per_cell_new","text":"high_foc data.frame containing cell ids top n focal values current iteration. dff data.frame observations value column name `dff` find concentrations . size size cell meters. points number points per `size`. db data.frame containing previously saved highest concentrations. radius radius circle meters. crs_from crs crs_to crs ","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/conc_per_cell_new.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Determine the concentrations within the highest focal cells for the current iteration — conc_per_cell_new","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/concentration.html","id":null,"dir":"Reference","previous_headings":"","what":"Concentration calculation — concentration","title":"Concentration calculation — concentration","text":"Calculates concentration, sum observations within circle certain radius.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/concentration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concentration calculation — concentration","text":"","code":"concentration(   sub,   full,   value,   lon_sub = lon,   lat_sub = lat,   lon_full = lon,   lat_full = lat,   radius = 200,   display_progress = TRUE )"},{"path":"https://mharinga.github.io/spatialrisk/reference/concentration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concentration calculation — concentration","text":"sub data.frame target points calculate concentration risk , including least columns longitude latitude. full data.frame containing reference points, function finds locations within radius target points. include least columns longitude, latitude, value interest summarize. value column name value interest summarize full. lon_sub column name sub longitude (default lon). lat_sub column name sub latitude (default lat). lon_full column name full longitude full (default lon). lat_full column name full latitude full (default lat). radius numeric. Radius circle meters (default 200). display_progress boolean indicating whether show progress bar (TRUE/FALSE). Defaults TRUE.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/concentration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concentration calculation — concentration","text":"data.frame equal sub including additional column concentration.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/concentration.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Concentration calculation — concentration","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/concentration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concentration calculation — concentration","text":"","code":"df <- data.frame(location = c(\"p1\", \"p2\"), lon = c(6.561561, 6.561398),  lat = c(53.21369, 53.21326)) concentration(df, Groningen, value = amount, radius = 100) #>   location      lon      lat concentration #> 1       p1 6.561561 53.21369           775 #> 2       p2 6.561398 53.21326          2271"},{"path":"https://mharinga.github.io/spatialrisk/reference/convert_crs_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Coordinate Reference System (CRS) — convert_crs_df","title":"Convert Coordinate Reference System (CRS) — convert_crs_df","text":"Convert Coordinate Reference System (CRS) data.frame one CRS another.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/convert_crs_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Coordinate Reference System (CRS) — convert_crs_df","text":"","code":"convert_crs_df(   df,   crs_from = 3035,   crs_to = 4326,   lon_from = \"x\",   lat_from = \"y\",   lon_to = \"lon\",   lat_to = \"lat\" )"},{"path":"https://mharinga.github.io/spatialrisk/reference/convert_crs_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Coordinate Reference System (CRS) — convert_crs_df","text":"df data.frame converted. crs_from CRS code original coordinate system (default: 3035). crs_to CRS code target coordinate system (default: 4326). lon_from column name longitude values df (default: \"x\"). lat_from column name latitude values df (default: \"y\"). lon_to column name longitude values converted data frame (default: \"lon\"). lat_to column name latitude values converted data frame (default: \"lat\").","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/convert_crs_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Coordinate Reference System (CRS) — convert_crs_df","text":"data.frame converted coordinates","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/convert_crs_df.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert Coordinate Reference System (CRS) — convert_crs_df","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/convert_df_to_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert data.frame to simple features (sf) object — convert_df_to_sf","title":"Convert data.frame to simple features (sf) object — convert_df_to_sf","text":"function converts data.frame simple features (sf) object.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/convert_df_to_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert data.frame to simple features (sf) object — convert_df_to_sf","text":"","code":"convert_df_to_sf(df, lon = \"lon\", lat = \"lat\", crs_from = 4326, crs_to = 3035)"},{"path":"https://mharinga.github.io/spatialrisk/reference/convert_df_to_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert data.frame to simple features (sf) object — convert_df_to_sf","text":"df data.frame containing longitude latitude columns lon column name longitude values (default: \"lon\"). lat column name latitude values (default: \"lat\"). crs_from crs original coordinate system (default: 4326). crs_to crs target coordinate system (default: 3035).","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/convert_df_to_sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert data.frame to simple features (sf) object — convert_df_to_sf","text":"Returns sf object specified coordinate reference system.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/convert_df_to_sf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert data.frame to simple features (sf) object — convert_df_to_sf","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/find_highest_concentration.html","id":null,"dir":"Reference","previous_headings":"","what":"Find highest concentration — find_highest_concentration","title":"Find highest concentration — find_highest_concentration","text":"Determines central coordinates circle constant radius maximizes coverage demand points.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/find_highest_concentration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find highest concentration — find_highest_concentration","text":"","code":"find_highest_concentration(   df,   value,   top_n = 1,   radius = 200,   cell_size = 100,   grid_precision = 1,   lon = \"lon\",   lat = \"lat\",   crs_metric = 3035,   print_progress = TRUE )"},{"path":"https://mharinga.github.io/spatialrisk/reference/find_highest_concentration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find highest concentration — find_highest_concentration","text":"df data.frame. include least columns longitude, latitude, value interest summarize. value column name value interest summarize df. top_n positive integer value greater equal 1 (default 1). radius numeric. Radius circle meters (default 200). cell_size numeric. Size cell meters (default 100). grid_precision numeric. Precision grid meters (default 1). lon column name df longitude (default \"lon\").   EPSG:4326. lat column name df latitude (default \"lat\"). EPSG:4326. crs_metric numeric. metric Coordinate Reference System (CRS) used solely background calculations. European coordinates, EPSG:3035 (default) recommended. United States, EPSG:6317 can utilized. Asia Pacific regions, EPSG:8859 recommended. print_progress print progress iteration steps.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/find_highest_concentration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find highest concentration — find_highest_concentration","text":"list two elements: data.frame containing top_n concentrations specified top_n. data.frame containing rows df correspond top_n concentrations.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/find_highest_concentration.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find highest concentration — find_highest_concentration","text":"recent regulation European Commission mandates insurance companies report maximum value insured fire risk policies buildings partially fully situated within circle radius 200 meters  (see Article 132 - fire risk sub-module - Delegated Regulation). article captures risk catastrophic fire explosion, including result terrorist attacks. sub-module based scenario insurance reinsurance undertaking incurs loss equal capital insured building located partly fully within radius 200 meters. problem resembles Maximal Covering Location Problem (MCLP) fixed radius, belonging category facility location problems. main aim select best locations predetermined number facilities achieve maximum coverage demand points within specified radius facility. essence, objective identify optimal facility locations cover many demand points feasible, ensuring demand point falls within designated distance (radius) least one facility.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/find_highest_concentration.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find highest concentration — find_highest_concentration","text":"Commission Delegated Regulation (EU) (2015). Solvency II Delegated Act 2015/35. Official Journal European Union, 58:124.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/find_highest_concentration.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find highest concentration — find_highest_concentration","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/find_highest_concentration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find highest concentration — find_highest_concentration","text":"","code":"x <- find_highest_concentration(Groningen, \"amount\") plot(x)  y <- find_highest_concentration(     Groningen, \"amount\", top_n = 2, cell_size = 50 ) #>  Finished 1 of 2 Finished 2 of 2 plot(y)"},{"path":"https://mharinga.github.io/spatialrisk/reference/haversine.html","id":null,"dir":"Reference","previous_headings":"","what":"Haversine great circle distance — haversine","title":"Haversine great circle distance — haversine","text":"Calculates shortest distance two points Earth's surface using Haversine formula, also known great-circle distance \"crow flies\".","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/haversine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Haversine great circle distance — haversine","text":"","code":"haversine(lat_from, lon_from, lat_to, lon_to, r = 6378137)"},{"path":"https://mharinga.github.io/spatialrisk/reference/haversine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Haversine great circle distance — haversine","text":"lat_from Latitude starting point. lon_from Longitude starting point. lat_to Latitude destination point. lon_to Longitude destination point. r Radius Earth meters (default = 6378137).","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/haversine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Haversine great circle distance — haversine","text":"Vector distances unit r (default meters).","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/haversine.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Haversine great circle distance — haversine","text":"Haversine ('half-versed-sine') formula published R.W. Sinnott 1984, although known much longer.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/haversine.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Haversine great circle distance — haversine","text":"Sinnott, R.W, 1984. Virtues Haversine. Sky Telescope 68(2): 159.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/haversine.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Haversine great circle distance — haversine","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/haversine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Haversine great circle distance — haversine","text":"","code":"haversine(53.24007, 6.520386, 53.24054, 6.520386) #> [1] 52.32016"},{"path":"https://mharinga.github.io/spatialrisk/reference/highest_conc.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the highest concentration for the current iteration — highest_conc","title":"Find the highest concentration for the current iteration — highest_conc","text":"Find highest concentration current iteration.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/highest_conc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the highest concentration for the current iteration — highest_conc","text":"","code":"highest_conc(hf_conc_new, high_foc, db)"},{"path":"https://mharinga.github.io/spatialrisk/reference/highest_conc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the highest concentration for the current iteration — highest_conc","text":"hf_conc_new highest concentrations current iteration, retrieved conc_per_cell_new(). high_foc data.frame containing cell ids top n focal values current iteration. db data.frame containing previously saved highest concentrations.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/highest_conc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find the highest concentration for the current iteration — highest_conc","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/insurance.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum insured per postal code in the Netherlands — insurance","title":"Sum insured per postal code in the Netherlands — insurance","text":"dataset postal codes sum insured, population corresponding spatial locations terms latitude longitude.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/insurance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum insured per postal code in the Netherlands — insurance","text":"","code":"insurance"},{"path":"https://mharinga.github.io/spatialrisk/reference/insurance.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sum insured per postal code in the Netherlands — insurance","text":"data frame 29,990 rows 5 variables: postcode 6-digit postal code population_pc4 Population per 4-digit postal code amount Sum insured lon Longitude (degrees) corresponding 6-digit postal code lat Latitude (degrees) corresponding 6-digit postal code","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/insurance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sum insured per postal code in the Netherlands — insurance","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/interpolate_spline.html","id":null,"dir":"Reference","previous_headings":"","what":"Splines on the sphere — interpolate_spline","title":"Splines on the sphere — interpolate_spline","text":"Spline interpolation smoothing sphere.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/interpolate_spline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Splines on the sphere — interpolate_spline","text":"","code":"interpolate_spline(   observations,   targets,   value,   lon_obs = lon,   lat_obs = lat,   lon_targets = lon,   lat_targets = lat,   k = 50 )"},{"path":"https://mharinga.github.io/spatialrisk/reference/interpolate_spline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Splines on the sphere — interpolate_spline","text":"observations data.frame observations. targets data.frame locations calculate interpolated smoothed values (target points). value Column values observations. lon_obs Column observations longitude (lon default). lat_obs Column observations latitude (lat default). lon_targets Column targets longitude (lon default). lat_targets Column targets latitude (lat default). k (default 50) basis dimension. small data sets reduce k manually rather using default.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/interpolate_spline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Splines on the sphere — interpolate_spline","text":"Object equal object targets including extra column  predicted values.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/interpolate_spline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Splines on the sphere — interpolate_spline","text":"observations include least columns longitude latitude. targets include least columns longitude, latitude value interest interpolate smooth. smooth general type discussed Duchon (1977) used: sphere embedded 3D Euclidean space, smoothing employs penalty based second derivatives (locally smoothing parameter tends zero recover \"normal\" thin plate spline tangent space). unpublished suggestion Jean Duchon.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/interpolate_spline.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Splines on the sphere — interpolate_spline","text":"Splines sphere","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/interpolate_spline.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Splines on the sphere — interpolate_spline","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/interpolate_spline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Splines on the sphere — interpolate_spline","text":"","code":"if (FALSE) { # \\dontrun{ target <- sf::st_drop_geometry(nl_postcode3) obs <- dplyr::sample_n(insurance, 1000) pop_df <- interpolate_spline(obs, target, population_pc4, k = 20) pop_sf <- dplyr::left_join(nl_postcode3, pop_df) choropleth(pop_sf, value = \"population_pc4_pred\", n = 13) } # }"},{"path":"https://mharinga.github.io/spatialrisk/reference/knmi_historic_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve historic weather data for the Netherlands — knmi_historic_data","title":"Retrieve historic weather data for the Netherlands — knmi_historic_data","text":"function retrieves historic weather data collected official KNMI weather stations. See spatialrisk::knmi_stations list official KNMI weather stations.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/knmi_historic_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve historic weather data for the Netherlands — knmi_historic_data","text":"","code":"knmi_historic_data(startyear, endyear)"},{"path":"https://mharinga.github.io/spatialrisk/reference/knmi_historic_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Retrieve historic weather data for the Netherlands — knmi_historic_data","text":"returned data frame contains following columns: station = ID measurement station; date = Date; FH\t= Hourly mean wind speed (0.1 m/s); FX\t= Maximum wind gust (0.1 m/s) hourly division; DR\t= Precipitation duration (0.1 hour) hourly division; RH\t= Hourly precipitation amount (0.1 mm) (-1 <0.05 mm); city = City measurement station located; lon = Longitude station (crs = 4326); lat = Latitude station (crs = 4326).","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/knmi_historic_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve historic weather data for the Netherlands — knmi_historic_data","text":"startyear start year historic weather data. endyear end year historic weather data.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/knmi_historic_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve historic weather data for the Netherlands — knmi_historic_data","text":"Data frame containing weather data meta data weather station locations.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/knmi_historic_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieve historic weather data for the Netherlands — knmi_historic_data","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/knmi_historic_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve historic weather data for the Netherlands — knmi_historic_data","text":"","code":"if (FALSE) { # \\dontrun{ knmi_historic_data(2015, 2019) } # }"},{"path":"https://mharinga.github.io/spatialrisk/reference/knmi_stations.html","id":null,"dir":"Reference","previous_headings":"","what":"KNMI stations — knmi_stations","title":"KNMI stations — knmi_stations","text":"data frame containing IDs meta-data official KNMI weather stations.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/knmi_stations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"KNMI stations — knmi_stations","text":"","code":"knmi_stations"},{"path":"https://mharinga.github.io/spatialrisk/reference/knmi_stations.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"KNMI stations — knmi_stations","text":"data frame 50 rows 7 variables: station ID station (209-391) city City station located lon Longitude station (crs = 4326) lat Latitude station (crs = 4326) altitude Altitude station (meters) X X coordinate station (crs = 32631) Y Y coordinate station (crs = 32631)","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/knmi_stations.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"KNMI stations — knmi_stations","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/map_points_to_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Map point coordinates to cell indices — map_points_to_cells","title":"Map point coordinates to cell indices — map_points_to_cells","text":"Map point coordinates cell indices.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/map_points_to_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map point coordinates to cell indices — map_points_to_cells","text":"","code":"map_points_to_cells(pts, focal, lon, lat, crs_from, crs_to, r = NULL)"},{"path":"https://mharinga.github.io/spatialrisk/reference/map_points_to_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map point coordinates to cell indices — map_points_to_cells","text":"pts data.frame lon lat columns CRS 4326. focal focal (SpatRaster). lon character. lat character. crs_from crs crs_to crs r buffer around extent (units crs).","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/map_points_to_cells.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Map point coordinates to cell indices — map_points_to_cells","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/mw_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Create focal (","title":"Create focal (","text":"Create focal (\"moving window\") weight matrix use terra::focal().","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/mw_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create focal (","text":"","code":"mw_create(r, radius)"},{"path":"https://mharinga.github.io/spatialrisk/reference/mw_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create focal (","text":"r SpatRaster. radius radius circle (units crs).","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/mw_create.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create focal (","text":"mw_create() modified version terra::focalMat(). terra::focalMat() creates matrix border distance center focal cell, mw_create() creates matrix border moving window distance edge focal cell.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/mw_create.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create focal (","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_corop.html","id":null,"dir":"Reference","previous_headings":"","what":"Object of class sf for COROP regions in the Netherlands — nl_corop","title":"Object of class sf for COROP regions in the Netherlands — nl_corop","text":"object class sf (simple feature) COROP regions Netherlands.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_corop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object of class sf for COROP regions in the Netherlands — nl_corop","text":"","code":"nl_corop"},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_corop.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Object of class sf for COROP regions in the Netherlands — nl_corop","text":"simple feature object 40 rows 5 variables: corop_nr corop number areaname corop name geometry geometry object COROP region lon longitude corop centroid lat latitude corop centroid","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_corop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Object of class sf for COROP regions in the Netherlands — nl_corop","text":"COROP region regional area within Netherlands. regions used analytical purposes , among others, Statistics Netherlands. Dutch abbreviation stands Coordinatiecommissie Regionaal Onderzoeksprogramma, literally Coordination Commission Regional Research Programme.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_corop.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Object of class sf for COROP regions in the Netherlands — nl_corop","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_gemeente.html","id":null,"dir":"Reference","previous_headings":"","what":"Object of class sf for municipalities in the Netherlands — nl_gemeente","title":"Object of class sf for municipalities in the Netherlands — nl_gemeente","text":"object class sf (simple feature) municipalities (Dutch: gemeentes) Netherlands year 2021.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_gemeente.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object of class sf for municipalities in the Netherlands — nl_gemeente","text":"","code":"nl_gemeente"},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_gemeente.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Object of class sf for municipalities in the Netherlands — nl_gemeente","text":"simple feature object 380 rows 6 variables: id id gemeente code code gemeente areaname name gemeente lon longitude gemeente centroid lat latitude gemeente centroid geometry geometry object gemeente","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_gemeente.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Object of class sf for municipalities in the Netherlands — nl_gemeente","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_postcode2.html","id":null,"dir":"Reference","previous_headings":"","what":"Object of class sf for 2-digit postcode regions in the Netherlands — nl_postcode2","title":"Object of class sf for 2-digit postcode regions in the Netherlands — nl_postcode2","text":"object class sf (simple feature) 2-digit postal codes (Dutch: postcode) regions Netherlands.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_postcode2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object of class sf for 2-digit postcode regions in the Netherlands — nl_postcode2","text":"","code":"nl_postcode2"},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_postcode2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Object of class sf for 2-digit postcode regions in the Netherlands — nl_postcode2","text":"simple feature object 90 rows 4 variables: areaname 2-digit postal code geometry geometry object postal code lon longitude 2-digit postal code centroid lat latitude 2-digit postal code centroid","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_postcode2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Object of class sf for 2-digit postcode regions in the Netherlands — nl_postcode2","text":"Postal codes Netherlands, known postcodes, alphanumeric, consisting four digits followed two uppercase letters. first two digits indicate city region, second two digits  two letters indicate range house numbers, usually  street.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_postcode2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Object of class sf for 2-digit postcode regions in the Netherlands — nl_postcode2","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_postcode3.html","id":null,"dir":"Reference","previous_headings":"","what":"Object of class sf for 3-digit postcode regions in the Netherlands — nl_postcode3","title":"Object of class sf for 3-digit postcode regions in the Netherlands — nl_postcode3","text":"object class sf (simple feature) 3-digit postal codes (Dutch: postcode) regions Netherlands.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_postcode3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object of class sf for 3-digit postcode regions in the Netherlands — nl_postcode3","text":"","code":"nl_postcode3"},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_postcode3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Object of class sf for 3-digit postcode regions in the Netherlands — nl_postcode3","text":"simple feature object 799 rows 3 variables: areaname 3-digit postal code geometry geometry object postal code lon longitude 3-digit postal code centroid lat latitude 3-digit postal code centroid","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_postcode3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Object of class sf for 3-digit postcode regions in the Netherlands — nl_postcode3","text":"Postal codes Netherlands, known postcodes, alphanumeric, consisting four digits followed two uppercase letters. first two digits indicate city region, second two digits two letters indicate range house numbers, usually street.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_postcode3.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Object of class sf for 3-digit postcode regions in the Netherlands — nl_postcode3","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_postcode4.html","id":null,"dir":"Reference","previous_headings":"","what":"Object of class sf for 4-digit postcode regions in the Netherlands — nl_postcode4","title":"Object of class sf for 4-digit postcode regions in the Netherlands — nl_postcode4","text":"object class sf (simple feature) 4-digit postal codes (Dutch: postcode) regions Netherlands.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_postcode4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object of class sf for 4-digit postcode regions in the Netherlands — nl_postcode4","text":"","code":"nl_postcode4"},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_postcode4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Object of class sf for 4-digit postcode regions in the Netherlands — nl_postcode4","text":"simple feature object 4053 rows 7 variables: pc4 4-digit postal code areaname name corresponding 4-digit postal code city name city biggest_20cities pc4 one following twenty (biggest)   cities Netherlands: Amsterdam, Rotterdam, 's-Gravenhage, Utrecht,   Eindhoven, Tilburg, Groningen, Almere, Breda, Nijmegen, Enschede,   Apeldoorn, Haarlem, Amersfoort, Arnhem, 's-Hertogenbosch, Zoetermeer,   Zwolle, Maastricht, Leiden. geometry geometry object postal code lon longitude 4-digit postal code centroid lat latitude 4-digit postal code centroid","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_postcode4.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Object of class sf for 4-digit postcode regions in the Netherlands — nl_postcode4","text":"Postal codes Netherlands, known postcodes, alphanumeric, consisting four digits followed two uppercase letters. first two digits indicate city region, second two digits  two letters indicate range house numbers, usually  street.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_postcode4.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Object of class sf for 4-digit postcode regions in the Netherlands — nl_postcode4","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_provincie.html","id":null,"dir":"Reference","previous_headings":"","what":"Object of class sf for provinces in the Netherlands — nl_provincie","title":"Object of class sf for provinces in the Netherlands — nl_provincie","text":"object class sf (simple feature) provinces (Dutch: provincies) Netherlands.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_provincie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object of class sf for provinces in the Netherlands — nl_provincie","text":"","code":"nl_provincie"},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_provincie.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Object of class sf for provinces in the Netherlands — nl_provincie","text":"simple feature object 12 rows 4 variables: areaname province name geometry geometry object province lon longitude province centroid lat latitude province centroid","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/nl_provincie.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Object of class sf for provinces in the Netherlands — nl_provincie","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/plot.concentration.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatically create a plot for objects obtained from find_highest_concentration() — plot.concentration","title":"Automatically create a plot for objects obtained from find_highest_concentration() — plot.concentration","text":"Automatically create plot objects obtained find_highest_concentration().","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/plot.concentration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatically create a plot for objects obtained from find_highest_concentration() — plot.concentration","text":"","code":"# S3 method for class 'concentration' plot(   x,   type = c(\"concentration\", \"focal\", \"rasterized\", \"updated_focal\"),   color1 = NULL,   max.rad = 20,   ... )"},{"path":"https://mharinga.github.io/spatialrisk/reference/plot.concentration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatically create a plot for objects obtained from find_highest_concentration() — plot.concentration","text":"x x object class concentration obtained highest_concentration() type one \"concentration\" (default), \"rasterized\", \"focal\", \"updated_focal\". See details information. color1 color one concentration plotted (default \"#4B0055\"). max.rad maximal radius size circles plot (default 20). ... additional arguments.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/plot.concentration.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Automatically create a plot for objects obtained from find_highest_concentration() — plot.concentration","text":"info type: \"concentration\": .. \"focal\": .. \"rasterized\": .. \"updated_focal\": ..","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/plot.concentration.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Automatically create a plot for objects obtained from find_highest_concentration() — plot.concentration","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/plot.concentration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automatically create a plot for objects obtained from find_highest_concentration() — plot.concentration","text":"","code":"x <- find_highest_concentration(Groningen, \"amount\") plot(x, \"concentration\") plot(x, \"rasterized\") plot(x, \"focal\") plot(x, \"updated_focal\")"},{"path":"https://mharinga.github.io/spatialrisk/reference/plot_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Create map with points — plot_points","title":"Create map with points — plot_points","text":"Create map data.frame containing points.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/plot_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create map with points — plot_points","text":"","code":"plot_points(df, value, lon = \"lon\", lat = \"lat\", crs = 4326, at = NULL)"},{"path":"https://mharinga.github.io/spatialrisk/reference/plot_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create map with points — plot_points","text":"df data.frame containing columns longitude latitude. value column df visualized. lon column df containing longitude values. lat column df containing latitude values. crs crs code coordinate reference system (default 4326). breakpoints used visualisation.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/plot_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create map with points — plot_points","text":"","code":"if (FALSE) { # \\dontrun{ plot_points(Groningen, value = \"amount\") } # }"},{"path":"https://mharinga.github.io/spatialrisk/reference/points_in_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter observations within circle — points_in_circle","title":"Filter observations within circle — points_in_circle","text":"Filter observations data.frame fall within circle specified radius drawn around given latitude longitude point.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/points_in_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter observations within circle — points_in_circle","text":"","code":"points_in_circle(   data,   lon_center,   lat_center,   lon = lon,   lat = lat,   radius = 200 )"},{"path":"https://mharinga.github.io/spatialrisk/reference/points_in_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter observations within circle — points_in_circle","text":"data data.frame least columns longitude latitude. lon_center numeric. Representing longitude circle's center. lat_center numeric. Representing latitude circle's center. lon column name data containing longitudes (default lon). lat column name data containing latitudes (default lat). radius radius circle meters (default 200m).","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/points_in_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter observations within circle — points_in_circle","text":"subset input data.frame containing observations fall within specified circle.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/points_in_circle.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Filter observations within circle — points_in_circle","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/points_in_circle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter observations within circle — points_in_circle","text":"","code":"points_in_circle(Groningen, lon_center = 6.571561, lat_center = 53.21326, radius = 60) #> # A tibble: 3 × 10 #>   street    number letter suffix postal_code city    lon   lat amount distance_m #>   <chr>      <int> <chr>  <chr>  <chr>       <chr> <dbl> <dbl>  <dbl>      <dbl> #> 1 Heresing…      5 NA     NA     9711EP      Gron…  6.57  53.2      5       31.4 #> 2 Heresing…     11 NA     NA     9711ER      Gron…  6.57  53.2     11       47.8 #> 3 Zuiderpa…   1003 NA     NA     9724AK      Gron…  6.57  53.2   1003       57.6"},{"path":"https://mharinga.github.io/spatialrisk/reference/points_in_circle_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter observations within circle (vectorized) — points_in_circle_vec","title":"Filter observations within circle (vectorized) — points_in_circle_vec","text":"Filter observations data.frame fall within circle specified radius drawn around given latitude longitude point.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/points_in_circle_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter observations within circle (vectorized) — points_in_circle_vec","text":"","code":"points_in_circle_vec(   data,   lon_center,   lat_center,   lon = lon,   lat = lat,   radius = 200 )"},{"path":"https://mharinga.github.io/spatialrisk/reference/points_in_circle_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter observations within circle (vectorized) — points_in_circle_vec","text":"data data.frame least columns longitude latitude. lon_center numeric. Representing longitude circle's center. lat_center numeric. Representing latitude circle's center. lon column name data containing longitudes (default lon). lat column name data containing latitudes (default lat). radius radius circle meters (default 200m).","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/points_in_circle_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter observations within circle (vectorized) — points_in_circle_vec","text":"subset input data.frame containing observations fall within specified circle.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/points_in_circle_vec.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Filter observations within circle (vectorized) — points_in_circle_vec","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/points_in_circle_vec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter observations within circle (vectorized) — points_in_circle_vec","text":"","code":"points_in_circle_vec(Groningen, lon_center = c(6.571561, 6.56561), lat_center = c(53.21326, 53.20326), radius = 60) #>      id distance_m center_index     street number letter suffix postal_code #> 1 16611   31.36533            1 Heresingel      5   <NA>   <NA>      9711EP #> 2  3003   47.79962            1 Heresingel     11   <NA>   <NA>      9711ER #> 3  1191   57.56884            1 Zuiderpark   1003   <NA>   <NA>      9724AK #>        city      lon      lat amount #> 1 Groningen 6.571338 53.21351      5 #> 2 Groningen 6.571767 53.21367     11 #> 3 Groningen 6.571620 53.21274   1003"},{"path":"https://mharinga.github.io/spatialrisk/reference/points_to_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Map points to polygons — points_to_polygon","title":"Map points to polygons — points_to_polygon","text":"Join data.frame containing coordinates (longitude latitude) polygon geometries. Arithmetic operations applied attributes joined coordinates obtain aggregated values polygon.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/points_to_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map points to polygons — points_to_polygon","text":"","code":"points_to_polygon(sf_map, df, oper, crs = 4326, outside_print = FALSE)"},{"path":"https://mharinga.github.io/spatialrisk/reference/points_to_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map points to polygons — points_to_polygon","text":"sf_map object class sf representing polygon geometries. df data.frame containing coordinates (column names 'lon' 'lat') oper arithmetic operation applied polygon level. crs coordinate reference system (default 4326). outside_print logical indicating whether print points within polygon (default FALSE).","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/points_to_polygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map points to polygons — points_to_polygon","text":"object class sf","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/points_to_polygon.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Map points to polygons — points_to_polygon","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/points_to_polygon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map points to polygons — points_to_polygon","text":"","code":"points_to_polygon(nl_postcode2, insurance, sum(amount, na.rm = TRUE)) #> 80 points fall not within a polygon. #> Simple feature collection with 90 features and 5 fields #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: 3.358524 ymin: 50.7526 xmax: 7.226687 ymax: 53.55053 #> Geodetic CRS:  WGS 84 #> First 10 features: #>    id areaname      lon      lat    output                       geometry #> 1   1       10 4.879542 52.38225 129893079 POLYGON ((5.012625 52.34479... #> 2   2       11 4.964842 52.32814  59755600 MULTIPOLYGON (((5.109895 52... #> 3   3       12 5.155867 52.23687  48687601 MULTIPOLYGON (((5.317405 52... #> 4   4       13 5.196764 52.35673  60964213 MULTIPOLYGON (((5.007205 52... #> 5   5       14 4.942569 52.51892  45739347 MULTIPOLYGON (((4.826908 52... #> 6   6       15 4.798242 52.46970  29442124 POLYGON ((4.863114 52.43076... #> 7   7       16 5.087324 52.68566  29082847 MULTIPOLYGON (((5.029327 52... #> 8   8       17 4.864428 52.85513  52473036 MULTIPOLYGON (((4.822374 53... #> 9   9       18 4.740657 52.64247  37757398 POLYGON ((4.751882 52.59302... #> 10 10       19 4.663460 52.52935  37393849 POLYGON ((4.682128 52.4188,... if (FALSE) { # \\dontrun{ shp_read <- sf::st_read(\"~/path/to/file.shp\") points_to_polygon(shp_read, insurance, sum(amount, na.rm = TRUE)) } # }"},{"path":"https://mharinga.github.io/spatialrisk/reference/top_n_focals.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify the focal indices with the highest values — top_n_focals","title":"Identify the focal indices with the highest values — top_n_focals","text":"Generate data.frame containing cell indices focal cells n highest values. Additionally, include columns coordinates (xy) corresponding center cell.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/top_n_focals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify the focal indices with the highest values — top_n_focals","text":"","code":"top_n_focals(focal, n)"},{"path":"https://mharinga.github.io/spatialrisk/reference/top_n_focals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify the focal indices with the highest values — top_n_focals","text":"focal focal output terra::focal(). n positive integer value greater equal 1.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/top_n_focals.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Identify the focal indices with the highest values — top_n_focals","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/update_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Save highest concentrations per cell for subsequent iterations — update_db","title":"Save highest concentrations per cell for subsequent iterations — update_db","text":"Save highest concentrations per cell subsequent iterations.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/update_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save highest concentrations per cell for subsequent iterations — update_db","text":"","code":"update_db(hf_conc_new, db, cells)"},{"path":"https://mharinga.github.io/spatialrisk/reference/update_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save highest concentrations per cell for subsequent iterations — update_db","text":"hf_conc_new highest concentrations current iteration, obtained conc_per_cell_new(). db data.frame containing previously saved highest concentrations. cells cells containing points associated current highest concentration removed db.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/update_db.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Save highest concentrations per cell for subsequent iterations — update_db","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/update_focal.html","id":null,"dir":"Reference","previous_headings":"","what":"Update current focal for the next iteration — update_focal","title":"Update current focal for the next iteration — update_focal","text":"Update current focal next iteration.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/update_focal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update current focal for the next iteration — update_focal","text":"","code":"update_focal(old_focal, new_rasterized, extent, mw)"},{"path":"https://mharinga.github.io/spatialrisk/reference/update_focal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update current focal for the next iteration — update_focal","text":"old_focal Focal obtained terra::focal() current iteration. new_rasterized Output obtained update_rasterize() next iteration. extent Extent cells corresponding coordinates highest concentration current iteration. Extent output terra::ext(). mw Moving window obtained create_mw().","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/update_focal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update current focal for the next iteration — update_focal","text":"Spatial extent refers geographic area covered spatial dataset. defines boundaries terms geographic coordinates (north, east, south, west). focal updated following steps: extent cells corresponding  coordinates highest concentration (xmin, xmax, ymin, ymax)  determined. buffer size two times radius plus  cell size around extent. cells within new extent impact  focal values. Subset (crop) rasterized data include cells  within new extent. Perform focal calculations new  cells. focal values cells near borders may  inflated, crop result include cells within radius  original extent. Merge updated focal previous focal object.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/update_focal.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Update current focal for the next iteration — update_focal","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/update_rasterize.html","id":null,"dir":"Reference","previous_headings":"","what":"Update current rasterize for the next iteration — update_rasterize","title":"Update current rasterize for the next iteration — update_rasterize","text":"Update current rasterize next iteration.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/update_rasterize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update current rasterize for the next iteration — update_rasterize","text":"","code":"update_rasterize(old_rasterized, extent, new_spatvector, col)"},{"path":"https://mharinga.github.io/spatialrisk/reference/update_rasterize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update current rasterize for the next iteration — update_rasterize","text":"old_rasterized SpatRaster used current iteration. extent Extent cells corresponding coordinates highest concentration current iteration.Extent output terra::ext(). new_spatvector Updated SpatVector next iteration. col Character. Variable name new_spatvector.","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/update_rasterize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update current rasterize for the next iteration — update_rasterize","text":"Spatial extent refers geographic area covered spatial dataset. defines boundaries terms geographic coordinates (north, east, south, west).","code":""},{"path":"https://mharinga.github.io/spatialrisk/reference/update_rasterize.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Update current rasterize for the next iteration — update_rasterize","text":"Martin Haringa","code":""},{"path":"https://mharinga.github.io/spatialrisk/news/index.html","id":"spatialrisk-072","dir":"Changelog","previous_headings":"","what":"spatialrisk 0.7.2","title":"spatialrisk 0.7.2","text":"highest_concentration() now uses focal calculations instead geohashes calculate sum per cell plot_points() now uses mapview::mapview() plot map","code":""},{"path":"https://mharinga.github.io/spatialrisk/news/index.html","id":"spatialrisk-071","dir":"Changelog","previous_headings":"","what":"spatialrisk 0.7.1","title":"spatialrisk 0.7.1","text":"CRAN release: 2024-02-21 plot_points() now returns warning specific provider tile available","code":""},{"path":"https://mharinga.github.io/spatialrisk/news/index.html","id":"spatialrisk-070","dir":"Changelog","previous_headings":"","what":"spatialrisk 0.7.0","title":"spatialrisk 0.7.0","text":"CRAN release: 2021-11-10 neighborhood_gh_search() now returns precise outcome radius circle equal 200m sf::st_crs() used sf objects show message old crs detected anymore","code":""},{"path":"https://mharinga.github.io/spatialrisk/news/index.html","id":"spatialrisk-069","dir":"Changelog","previous_headings":"","what":"spatialrisk 0.6.9","title":"spatialrisk 0.6.9","text":"CRAN release: 2021-05-26 highest_concentration() now returns correct highest concentration circle highest concentration overlaps one geohash plot.concentration() now handles many lon/lat pairs better","code":""},{"path":"https://mharinga.github.io/spatialrisk/news/index.html","id":"spatialrisk-068","dir":"Changelog","previous_headings":"","what":"spatialrisk 0.6.8","title":"spatialrisk 0.6.8","text":"CRAN release: 2021-05-18 highest_concentration() added fast search coordinates highest concentration neighborhood_gh_search() added look even higher concentrations neighborhood coordinates found highest_concentration()","code":""},{"path":"https://mharinga.github.io/spatialrisk/news/index.html","id":"spatialrisk-067","dir":"Changelog","previous_headings":"","what":"spatialrisk 0.6.7","title":"spatialrisk 0.6.7","text":"CRAN release: 2020-04-23 package website added using pkgdown. concentration() points_in_circle() now return error messages data contain columns lon lat. concentration() points_in_circle() updated documentation. haversine() now returns NA coordinates missing.","code":""},{"path":"https://mharinga.github.io/spatialrisk/news/index.html","id":"spatialrisk-066","dir":"Changelog","previous_headings":"","what":"spatialrisk 0.6.6","title":"spatialrisk 0.6.6","text":"CRAN release: 2020-03-21 points_to_polygon() updated keep spatialrisk new version dplyr working together smoothly.","code":""},{"path":"https://mharinga.github.io/spatialrisk/news/index.html","id":"spatialrisk-065","dir":"Changelog","previous_headings":"","what":"spatialrisk 0.6.5","title":"spatialrisk 0.6.5","text":"CRAN release: 2019-11-06 knmi_historic_data() knmi_stations() added retrieve data weather stations Netherlands.","code":""},{"path":"https://mharinga.github.io/spatialrisk/news/index.html","id":"spatialrisk-064","dir":"Changelog","previous_headings":"","what":"spatialrisk 0.6.4","title":"spatialrisk 0.6.4","text":"CRAN release: 2019-10-25 interpolate_krige() interpolate_spline() added interpolation smoothing sphere.","code":""},{"path":"https://mharinga.github.io/spatialrisk/news/index.html","id":"spatialrisk-063","dir":"Changelog","previous_headings":"","what":"spatialrisk 0.6.3","title":"spatialrisk 0.6.3","text":"CRAN release: 2019-10-18 Data sets nl_corop(), nl_gemeente(), nl_postcode1(), nl_postcode2(), nl_postcode3(), nl_postcode4(), nl_provincie() now contain columns longitude latitude centroid polygons.","code":""},{"path":"https://mharinga.github.io/spatialrisk/news/index.html","id":"spatialrisk-062","dir":"Changelog","previous_headings":"","what":"spatialrisk 0.6.2","title":"spatialrisk 0.6.2","text":"CRAN release: 2019-07-29 Non UTF-8 character removed column areaname data set nl_gemeente(). choropleth(), n specifies number clusters map. data sets nl_corop(), nl_gemeente(), nl_postcode1(), nl_postcode2(), nl_postcode3(), nl_postcode4(), nl_provincie, column areaname now refers region.","code":""},{"path":"https://mharinga.github.io/spatialrisk/news/index.html","id":"spatialrisk-061","dir":"Changelog","previous_headings":"","what":"spatialrisk 0.6.1","title":"spatialrisk 0.6.1","text":"CRAN release: 2019-04-30 points_to_polygon(), outside_print shows points within polygon.","code":""},{"path":"https://mharinga.github.io/spatialrisk/news/index.html","id":"spatialrisk-060","dir":"Changelog","previous_headings":"","what":"spatialrisk 0.6.0","title":"spatialrisk 0.6.0","text":"CRAN release: 2019-04-08 points_to_polygon() added. Data sets europe_countries() world_countries() added.","code":""},{"path":"https://mharinga.github.io/spatialrisk/news/index.html","id":"spatialrisk-051","dir":"Changelog","previous_headings":"","what":"spatialrisk 0.5.1","title":"spatialrisk 0.5.1","text":"CRAN release: 2019-03-01 concentration() algorithm testing point inside circle updated testing whether point inside square diamond inside square.","code":""},{"path":"https://mharinga.github.io/spatialrisk/news/index.html","id":"spatialrisk-031","dir":"Changelog","previous_headings":"","what":"spatialrisk 0.3.1","title":"spatialrisk 0.3.1","text":"CRAN release: 2018-09-12 NEWS.md added track changes package.","code":""}]
